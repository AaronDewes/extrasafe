# Inspired heavily by the libseccomp-rs CI script

name: build-test
on: push
jobs:
  validate:
    name: Format and Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install libseccomp
        run: sudo apt-get install libseccomp-dev
      - name: Install clippy
        run: rustup component add clippy
    # - name: Run cargo fmt
    #   run: cargo fmt --all -- --check
      - name: Run cargo clippy
        run: ./clippy.sh
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install libseccomp
        run: sudo apt-get install libseccomp-dev
      - name: Run tests
        run: cargo test --tests --examples

  static-link-bundled:
    name: Run tests with bundled feature and statically linked with musl
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        run: rustup target add ${{ matrix.target }}
      - name: Install required dependencies for bundled (may be preinstalled)
        run: sudo apt-get install gperf tar curl
      - name: Install musl gcc
        run: sudo apt-get install musl-tools
      - name: Build
        run: cargo build --features bundled --target ${{ matrix.target }}
      - name: Test
        # --no-default-features is required here so reqwest, used in an
        # example, doesn't try to use openssl
        run: cargo test --tests --examples --no-default-features --features bundled --target ${{ matrix.target }}

  doc:
    name: Documentation Check
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate documentation
        run: cargo doc --no-deps

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install libseccomp
        run: sudo apt-get install libseccomp-dev
      - name: Install Rust
        run: rustup toolchain install nightly --component llvm-tools-preview
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --tests --examples --all-targets --all-features --workspace --lcov --output-path lcov.info
      - name: Upload coverage to coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info
