# Inspired heavily by the libseccomp-rs CI script

name: build-test
on: 
  push:
  workflow_dispatch:
  pull_request:
jobs:
  validate:
    name: Format and Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install clippy
        run: rustup component add clippy
    # - name: Run cargo fmt
    #   run: cargo fmt --all -- --check
      - name: Run cargo clippy
        run: make lint
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target-triple:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
    steps:
      - name: Install musl lib
        if: ${{ contains(matrix.target-triple, 'musl') }}
        run: sudo apt-get install musl-tools
      - name: Install cross-compilation dependencies (GNU)
        if: ${{ contains(matrix.target-triple, 'aarch64') && contains(matrix.target-triple, 'gnu') }}
        run: sudo apt-get install libc6-dev-arm64-cross gcc-aarch64-linux-gnu
      - name: Install arm64 linker
        if: ${{ contains(matrix.target-triple, 'aarch64') }}
        run: sudo apt-get install binutils-aarch64-linux-gnu
      - name: Install target triple
        run: rustup target install ${{ matrix.target-triple }}
      - name: Set up QEMU
        if: ${{ contains(matrix.target-triple, 'aarch64') }}
        uses: docker/setup-qemu-action@v3
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run tests (x86_64)
        if: ${{ contains(matrix.target-triple, 'x86_64') }}
        run: make test-ci TARGET_TRIPLE=${{ matrix.target-triple }}
      - name: Run tests (arm64)
        if: ${{ contains(matrix.target-triple, 'aarch64') }}
        run: RUSTFLAGS="-C link-arg=-fuse-ld=rust-lld" make test-ci TARGET_TRIPLE=${{ matrix.target-triple }}

  doc:
    name: Documentation Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate documentation
        run: make doc

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        run: rustup toolchain install stable --component llvm-tools
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: make coverage-ci
      - name: Upload coverage to coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info
